name: CI
on:
  pull_request:
    branches: [ "main", "develop", "release" ]
  push:
    branches: [ "main", "develop", "release" ]

env:
  FLAVOR: ${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/develop' && 'dev' || 'dev' }}

jobs:
  ejecutar_pruebas:
    name: Ejecutar pruebas del proyecto
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Instalar dependencias 📦
        run: flutter pub get
        working-directory: .
      - uses: ./.github/actions/crear-env
        with:
          flavor: ${{ env.FLAVOR }}
      - name: Crear archivos .env si faltan 🧩
        run: |
          touch .env.dev
          touch .env.prod
      - name: Analizar código 🧐
        run: flutter analyze
        working-directory: .
      - name: Ejecutar pruebas 🧪
        run: flutter test --flavor ${{ env.FLAVOR }}
        working-directory: .
  construir_ios:
    name: Build Flutter (iOS)
    needs: [ejecutar_pruebas]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Instalar dependencias 📦
        run: flutter pub get
        working-directory: .
      - uses: ./.github/actions/crear-env
        with:
          flavor: ${{ env.FLAVOR }}
      - name: Limpiar proyecto 🧹
        run: flutter clean
        working-directory: .
      - name: Construir aplicación 🚀
        run: |
          if [ "${{ env.FLAVOR }}" = "prod" ]; then
            flutter build ios --flavor prod --release --no-codesign --target=lib/env/main.prod.dart
          else
            flutter build ios --flavor dev --release --no-codesign --target=lib/env/main.dev.dart
          fi
        working-directory: .

  construir_appbundle:
    name: Build Flutter (Android)
    needs: [ejecutar_pruebas]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Instalar dependencias 📦
        run: flutter pub get
        working-directory: .
      - uses: ./.github/actions/crear-env
        with:
          flavor: ${{ env.FLAVOR }}
      - name: Limpiar proyecto 🧹
        run: flutter clean
        working-directory: .
      - name: Construir aplicación 🚀
        run: |
          if [ "${{ env.FLAVOR }}" = "prod" ]; then
            flutter build appbundle --flavor prod --target=lib/env/main.prod.dart
          else
            flutter build appbundle --flavor dev --target=lib/env/main.dev.dart
          fi
        working-directory: .